use crate::{ui::theming::{ClassSet, StyledBox, HElem, Manager}, uicore::HView};

#[prototype_only]
#[widget]
#[builder(simple)]
pub comp crate::ui::views::Entry {
    const wm: crate::pal::Wm { pub set; }
    const style_manager: &Manager { pub set; }

    prop class_set: ClassSet { pub set; get clone; } = ?;

    const core: crate::ui::views::EntryCore { pub get borrow; } = ?;

    const view: HView { pub get clone; } = ?;
    const style_elem: HElem { pub get clone; } = ?;

    /// Set or retrieve the text content.
    ///
    /// When you assign to this property, if the new value is different from the
    /// current one, it resets various internal states such as an undo history.
    /// Otherwise, it does nothing.
    prop text: String { pub set; pub get clone; pub watch event(changed); } = ?;

    /// Raised after the text content is modified.
    ///
    /// The event may be raised spuriously, i.e., even when the text content
    /// is not actually modified.
    pub event changed(wm: pal::Wm);
}

#[prototype_only]
#[widget]
#[builder(simple)]
pub comp crate::ui::views::EntryCore {
    const wm: crate::pal::Wm { pub set; }
    const style_manager: &Manager { pub set; }

    const view: HView { pub get clone; } = ?;
    const style_elem: HElem { pub get clone; } = ?;

    /// Set or retrieve the text content.
    ///
    /// When you assign to this property, if the new value is different from the
    /// current one, it resets various internal states such as an undo history.
    /// Otherwise, it does nothing.
    prop text: String { pub set; pub get clone; pub watch event(changed); } = ?;

    /// Raised after the text content is modified.
    ///
    /// The event may be raised spuriously, i.e., even when the text content
    /// is not actually modified.
    pub event changed(wm: pal::Wm);
}
