use tcw3::{
    ui::{
        theming::{self, Manager},
        mixins::scrollwheel::ScrollAxisFlags,
        views::{ScrollableTable, table},
    },
    uicore::{HView, SizeTraits, ViewFlags},
    pal,
};

use crate::{
    model,
    stylesheet::elem_id,
    view::{dpiscalewatcher::DpiScaleWatcher, logview::GUTTER_WIDTH},
};

#[widget]
pub(crate) comp crate::view::logview::LogView {
    const wm: pal::Wm { pub set; }
    const style_manager: &Manager { pub set; get clone; }

    const view: HView { pub get clone; } = get!(dpi_scale_watcher.view);

    const table = ScrollableTable::new! {
        style_manager,
        scrollable_axes = ScrollAxisFlags::VERTICAL,
        flags = table::TableFlags::GROW_LAST_COL,
        size_traits = SizeTraits {
            preferred: [300.0, 300.0].into(),
            // The vertical minimum size is kind of arbitrary
            min: [GUTTER_WIDTH * 2.0, 40.0].into(),
            ..Default::default()
        },
    };

    const dpi_scale_watcher = DpiScaleWatcher::new! {
        subview = get!(table.view),
        view_flags = ViewFlags::ACCEPT_MOUSE_DRAG | ViewFlags::TAB_STOP,
    };

    on (init) get!(&self).init();

    on (table.table.prearrange, dpi_scale_watcher.dpi_scale_changed) {
        get!(&self).update_row_visuals();
    }
}
